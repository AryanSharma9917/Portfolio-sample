@layer components {
  .container {
    --inputFontSize: calc((16 / 16) * 1rem);
    --inputFocusColor: var(--primary);
    --inputUnderlineColor: color-mix(in lab, var(--text) 20%, transparent);

    position: relative;
    display: flex;
    flex-direction: column;

    &[data-error='true'] {
      --inputUnderlineColor: var(--error);
    }
  }

  .content {
    position: relative;
    display: flex;
  }

  .input {
    display: block;
    color: var(--textBody);
    box-shadow: inset 0 -2px 0 0 var(--inputUnderlineColor);
    transition: background-color 5000s linear 0s;
    width: 100%;
    font-size: var(--inputFontSize);
    line-height: var(--lineHeightBody);
    padding: var(--spaceL) 0 var(--spaceM);
    overflow-x: hidden;
    outline: none;

    &:-internal-autofill-selected {
      -webkit-text-fill-color: var(--textBody);
      box-shadow: 0 0 0 1000px color-mix(in lab, var(--text) 10%, transparent) inset;
    }

    /* Needs to be a single selector to work in safari */
    &:-webkit-autofill {
      -webkit-text-fill-color: var(--textBody);
      box-shadow: 0 0 0 1000px color-mix(in lab, var(--text) 10%, transparent) inset;
    }

    &::-webkit-contacts-auto-fill-button:hover {
      background-color: var(--primary);
    }

    @media (--mediaReduceMotion) {
      #root & {
        transition: background-color 5000s linear 0s;
      }
    }
  }

  .underline {
    background: var(--inputFocusColor);
    transform: scale3d(0, 1, 1);
    width: 100%;
    height: 2px;
    position: absolute;
    bottom: 0;
    transform-origin: left;

    @media (--mediaUseMotion) {
      transition: transform var(--durationM) var(--bezierFastoutSlowin);
    }

    &[data-focused='true'] {
      transform: scale3d(1, 1, 1);
    }
  }

  .label {
    color: color-mix(in lab, var(--text) 80%, transparent);
    position: absolute;
    top: var(--spaceL);
    left: 0;
    display: block;
    cursor: text;
    transform-origin: top left;
    transition: color var(--durationM) ease;

    @media (--mediaUseMotion) {
      transition: transform var(--durationM) var(--bezierFastoutSlowin),
        color var(--durationM) ease;
    }

    &[data-filled='true'],
    &[data-focused='true'] {
      color: color-mix(in lab, var(--text) 54%, transparent);
      transform: scale(0.8) translateY(calc(var(--spaceL) * -1));
    }
  }

  .error {
    transition-property: opacity;
    transition-duration: var(--durationM);
    transition-timing-function: var(--bezierFastoutSlowin);
    height: var(--height);
    opacity: 0;

    @media (--mediaUseMotion) {
      transition-property: height, opacity;
    }

    &[data-visible='true'] {
      opacity: 1;
    }
  }

  .errorMessage {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
    gap: var(--spaceXS);
    padding-top: var(--spaceS);
    color: var(--error);
  }
}
